# -*- coding: utf-8 -*-
"""Assignment5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s8Hjdtzr3bXYiy6vM6J03A3oK7KLTIG0
"""

import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import uniform

sample_size=1000
#uniform distribution between 0 and 1
uniform_data= uniform.rvs(0,1,sample_size)

n=20 #no of divisons of the interval 0 and 1
linear_data=[]

intervals=np.linspace(0,1,n+1)
print(intervals)

for x in intervals :
  linear_data.append(np.size(np.nonzero(uniform_data<x)))

#cdf of the distribution
linear_data_nd=np.array(linear_data)

#print(linear_data_nd)

#linear density function values at some points
experimental_linear_density_data=linear_data_nd/sample_size
#quadratic density function values at some points
experimental_quadratic_density_data=np.multiply(experimental_linear_density_data,experimental_linear_density_data)


#required probability density function
pdf_data=np.append(experimental_linear_density_data[0:(n//2)+1],            #f(x)=x 0<=x<0.5
21*experimental_quadratic_density_data[(n//2)+1:n+1]-21*experimental_linear_density_data[(n//2)+1:n+1]+21/4)#f(x)=21/4*(2x-1)^2 0.5<=x<1

#plt.scatter(intervals[0:(n//2)+1],experimental_linear_density_data[0:(n//2)+1])
#plt.scatter(intervals[(n//2)+1:n+1],21*experimental_quadratic_density_data[(n//2)+1:n+1]-21*experimental_linear_density_data[(n//2)+1:n+1]+21/4)



fig, ax = plt.subplots()
#for f(x)=x  0<=x<0.5
x1=np.linspace(0,0.5,100)
plt.plot(x1,x1,label='f(x)=x')



#for f(x)=21/4*(2x-1)^2  0.5<=x<1
x2=np.linspace(0.5,1,100)
plt.plot(x2,21/4*(2*x2-1)**2,label='f(x)=21/4*(2x-1)^2')

#for f(x)=0 1<x
x3=np.linspace(1,2,100)
plt.plot(x3,0*x3,color='blue')

#for f(x)=0 x<0
x4=np.linspace(-1,0,100)
plt.plot(x4,0*x4,color='blue',label='f(x)=0')

#experimental plot
plt.scatter(intervals,pdf_data,label="Experimental")

ax.set_xlabel('X')
ax.set_ylabel('pdf')
ax.set_title('Probabilty density Function of a random Variable X')

ax.legend()
plt.show()